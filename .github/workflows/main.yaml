name: Continuous integration

on:
  push:
    branches:
      - master
      - '[0-9]+.[0-9]+'
    tags:
      - '*'
  pull_request:

jobs:
  main:
    name: Continuous integration
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    if: "!startsWith(github.event.head_commit.message, '[skip ci] ')"

    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.7'
          - '3.8'
          - '3.9'

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - run: echo "${HOME}/.local/bin" >> ${GITHUB_PATH}
      - run: python3 -m pip install --user --requirement=ci/requirements.txt
        if: matrix.python-version != '3.7'
      - run: pip install poetry
        if: matrix.python-version == '3.7'

      - run: pip install --editable=.
        if: matrix.python-version != '3.7'
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: "pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}\npre-commit-"
        if: matrix.python-version != '3.7'
      - run: pre-commit run --all-files
        env:
          SKIP: poetry-lock
        if: matrix.python-version != '3.7'
      - run: git diff && false
        if: failure()

      - name: Checks
        run: c2cciutils-checks
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        if: matrix.python-version != '3.7'

      - name: Install with Poetry
        run: poetry install

      - name: Prospector
        run: |
          poetry run prospector --output-format=pylint --die-on-tool-error

      - name: Test with pytest
        run: |
          poetry run pytest tests -vv

      - name: Init pypi
        run: |
          echo "[pypi]" > ~/.pypirc
          echo "username = ${{ secrets.PYPI_USERNAME }}" >> ~/.pypirc
          echo "password = ${{ secrets.PYPI_PASSWORD }}" >> ~/.pypirc
          python3 -m pip install --user wheel twine
        if: env.HAS_SECRETS == 'HAS_SECRETS'
      - name: Publish
        run: c2cciutils-publish
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        if: env.HAS_SECRETS == 'HAS_SECRETS' && matrix.python-version == '3.10'
